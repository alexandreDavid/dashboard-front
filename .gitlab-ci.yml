image: docker:latest
services:
  - docker:dind

stages:
  - test
  - build
  - deploy
  - deploy kube

variables:
  S3_PROD_BUCKET_NAME: "beta.dfms.co.uk"
  S3_DEV_BUCKET_NAME: "inte.dfms.co.uk"
  CI_REGISTRY_IMAGE: "dfmscloud/frontend"
  KUBE_APP_NAME: "dfms-front-$CI_COMMIT_REF_NAME"
  KUBE_URL: "https://FB42CF16C9817BB0606CE22400F6BC55.sk1.eu-west-1.eks.amazonaws.com"
  KUBE_TOKEN: "eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJnaXRsYWItYWRtaW4tdG9rZW4tbWJqMmoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZ2l0bGFiLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZDdiYTVjNmUtNGZhYi0xMWU5LTliMzQtMGFiZTliMTkzMWRhIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmdpdGxhYi1hZG1pbiJ9.ORH1rkun6IVHRChxTSSm30rRZDNXwWyKko3rVcPD3semT5EN_Cfca-aBRHQYzOEX4vYwCq13l3F4hghsg-E9EH7ibBHoqLgJx-JCpO-J3FPHTx-FmFIAlXD6F_7pu-oeugOUKiYgxKqm3rBJg58zOq643SMABRigp33sBEuXo6eIhS87Er6xPKTikIvvLy_8uqFVN1olBy0oYZynIpt0ctROcZyaE1Hj7vD9FdEClGQ3PJrZKyNnsuAUAjbVdV0cTGeJGom9QrUWlXog-ffTYZmO7Codq2ohjqwr031w_QLM6D_zffC4I4EyCyPlIR1fpMcUTUO8c7MtUbJczWj8lg"

test:
  stage: test
  image: adexlavid/npmpython:latest
  script:
    - npm install
    - npm run unit

build prod:
  stage: build
  image: adexlavid/npmpython:latest
  script:
    - npm install
    - npm run build
    - pip install awscli
    - aws s3 rm s3://$S3_PROD_BUCKET_NAME/static/ --recursive
    - aws s3 cp ./dist s3://$S3_PROD_BUCKET_NAME/ --recursive
  environment:
    name: production
  only:
    - master

build dev:
  stage: build
  image: adexlavid/npmpython:latest
  script:
    - npm install
    - npm run build-dev
    - pip install awscli
    - aws s3 rm s3://$S3_DEV_BUCKET_NAME/static/ --recursive
    - aws s3 cp ./dist s3://$S3_DEV_BUCKET_NAME/ --recursive
  environment:
    name: development
  only:
    - dev

deploy docker:
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  stage: deploy
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - dev
    - master
    - tags

deploy kube:
  stage: deploy kube
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster nosebit --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=nosebit --user=admin
    - kubectl config use-context default
    - sed 's/_APP_NAME_/'"$KUBE_APP_NAME"'/g; s/_VERSION_/'"$CI_COMMIT_SHA"'/g; s/_BRANCH_/'"$CI_COMMIT_REF_NAME"'/g' kubernetes.tpl.yml > kubernetes.yml;
    - kubectl apply -f kubernetes.yml
  only:
    - dev
    - master